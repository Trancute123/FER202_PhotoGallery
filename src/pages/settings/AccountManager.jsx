import React, { useState } from "react";
import currentUser from "../../utils/currentUser";
import BackToProfileButton from "../../components/profile/BackToProfileButton";

export default function AccountManager() {
  const [showPasswordFields, setShowPasswordFields] = useState(false);
  const [form, setForm] = useState({
    currentPassword: "",
    newPassword: "",
    confirmPassword: "",
  });

  const [profileInfo, setProfileInfo] = useState({
    birthDate: "2001-11-11",
    gender: "other",
    description: "kh√¥ng c√≥",
    country: "Vi·ªát Nam",
    language: "Ti·∫øng Vi·ªát",
  });

  const handleSubmit = (e) => {
    e.preventDefault();
    if (form.newPassword !== form.confirmPassword) {
      alert("‚ùå M·∫≠t kh·∫©u x√°c nh·∫≠n kh√¥ng kh·ªõp.");
    } else {
      alert("‚úÖ ƒê·ªïi m·∫≠t kh·∫©u th√†nh c√¥ng (gi·∫£ l·∫≠p).");
    }
  };

  const handleProfileChange = (e) => {
    const { name, value } = e.target;
    setProfileInfo((prev) => ({ ...prev, [name]: value }));
  };

  return (
    <div>
      <BackToProfileButton />
      <h4 className="mb-4">üîê Qu·∫£n l√Ω T√†i kho·∫£n</h4>

      <div className="mb-4">
        <strong>Email:</strong> {currentUser.email}
      </div>

      <div className="mb-3">
        <button
          className="btn btn-outline-dark"
          onClick={() => setShowPasswordFields(!showPasswordFields)}
        >
          {showPasswordFields ? "‚ùå H·ªßy" : "ƒê·ªïi m·∫≠t kh·∫©u"}
        </button>
      </div>

      {showPasswordFields && (
        <form onSubmit={handleSubmit} className="mb-5">
          <div className="mb-3">
            <label>M·∫≠t kh·∫©u hi·ªán t·∫°i</label>
            <input
              type="password"
              className="form-control"
              value={form.currentPassword}
              onChange={(e) => setForm({ ...form, currentPassword: e.target.value })}
            />
          </div>
          <div className="mb-3">
            <label>M·∫≠t kh·∫©u m·ªõi</label>
            <input
              type="password"
              className="form-control"
              value={form.newPassword}
              onChange={(e) => setForm({ ...form, newPassword: e.target.value })}
            />
          </div>
          <div className="mb-3">
            <label>X√°c nh·∫≠n m·∫≠t kh·∫©u m·ªõi</label>
            <input
              type="password"
              className="form-control"
              value={form.confirmPassword}
              onChange={(e) => setForm({ ...form, confirmPassword: e.target.value })}
            />
          </div>
          <button type="submit" className="btn btn-primary">
            C·∫≠p nh·∫≠t m·∫≠t kh·∫©u
          </button>
        </form>
      )}

      <h5 className="mb-3">üìã Th√¥ng tin c√° nh√¢n</h5>
      <form>
        <div className="mb-3">
          <label className="form-label">Ng√†y sinh</label>
          <input
            type="date"
            className="form-control"
            name="birthDate"
            value={profileInfo.birthDate}
            onChange={handleProfileChange}
          />
        </div>

        <div className="mb-3">
          <label className="form-label d-block">Gi·ªõi t√≠nh</label>
          <div className="form-check form-check-inline">
            <input
              className="form-check-input"
              type="radio"
              name="gender"
              value="male"
              checked={profileInfo.gender === "male"}
              onChange={handleProfileChange}
            />
            <label className="form-check-label">Nam</label>
          </div>
          <div className="form-check form-check-inline">
            <input
              className="form-check-input"
              type="radio"
              name="gender"
              value="female"
              checked={profileInfo.gender === "female"}
              onChange={handleProfileChange}
            />
            <label className="form-check-label">N·ªØ</label>
          </div>
          <div className="form-check form-check-inline">
            <input
              className="form-check-input"
              type="radio"
              name="gender"
              value="other"
              checked={profileInfo.gender === "other"}
              onChange={handleProfileChange}
            />
            <label className="form-check-label">Kh√°c</label>
          </div>
        </div>

        <div className="mb-3">
          <label className="form-label">Gi·ªõi thi·ªáu</label>
          <textarea
            className="form-control"
            name="description"
            rows={2}
            maxLength={500}
            value={profileInfo.description}
            onChange={handleProfileChange}
          />
          <small className="text-muted">{profileInfo.description.length}/500</small>
        </div>

        <div className="mb-3">
          <label className="form-label">Qu·ªëc gia/Khu v·ª±c</label>
          <select
            className="form-select"
            name="country"
            value={profileInfo.country}
            onChange={handleProfileChange}
          >
            <option>Vi·ªát Nam</option>
            <option>Hoa K·ª≥</option>
            <option>Nh·∫≠t B·∫£n</option>
            <option>H√†n Qu·ªëc</option>
          </select>
        </div>

        <div className="mb-3">
          <label className="form-label">Ng√¥n ng·ªØ</label>
          <select
            className="form-select"
            name="language"
            value={profileInfo.language}
            onChange={handleProfileChange}
          >
            <option>Ti·∫øng Vi·ªát</option>
            <option>English</option>
            <option>Êó•Êú¨Ë™û</option>
            <option>ÌïúÍµ≠Ïñ¥</option>
          </select>
        </div>

        <button type="button" className="btn btn-success">
          L∆∞u th√¥ng tin c√° nh√¢n
        </button>
      </form>
    </div>
  );
}
